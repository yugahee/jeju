<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM
"http://java.sun.com/dtd/properties.dtd">
<properties>
	<entry key="insertRooms">
		INSERT
		  INTO ROOMS
		(
			   ROOM_NO
			 , USER_ID
			 , ADDRESS
			 , LOCATION
			 , ROOM_NAME
			 , ROOM_TITLE
			 , ROOM_DES
			 , ROOM_TYPE
			 , ROOM_FAC
			 , PRICE
			 , MIN_PEOPLE
			 , MAX_PEOPLE
			 , START_TIME
			 , END_TIME
			 , CREATE_DATE
			 , MODIFY_DATE
			 , ENROLL_STATUS
			 , ROOM
			 , BED
			 , BATH
			 , BUILDING_TYPE
			 , ROOM_SIZE
			 , MIN_STAY
			 , MAX_STAY
			 , STATUS
			 , ROOM_LINK
			 , EXTRA_COST
		)
		VALUES
		(
			   SEQ_ROOMNO.NEXTVAL
			 , ?
			 , ?
			 , ?
			 , ?
			 , ?
			 , ?
			 , ?
			 , ?
			 , ?
			 , ?
			 , ?
			 , ?
			 , ?
			 , SYSDATE
			 , SYSDATE
			 , '승인대기'
			 , ?
			 , ?
			 , ?
			 , ?
			 , ?
			 , ?
			 , ?
			 , DEFAULT
			 , ?
			 , ?	 	
		)
	</entry>

	<entry key="insertFiles">
		INSERT
		  INTO FILES
		(    
			   FILE_NO
			 , CHANGE_NAME
			 , ROOM_NO
			 , FILE_PATH
			 , FILE_LEVEL
			 , STATUS   
		)
		VALUES
		(
			   SEQ_FILENO.NEXTVAL
			 , ?
			 , SEQ_ROOMNO.CURRVAL   <!-- 현재 전달된 서비스 메소드에서 ROOMS 인서트할때의 ROOMNO값 불러오기 (같은 conn 사용하니까)-->
			 , ?
			 , ?
			 , DEFAULT
		)
	</entry>
	
	<entry key="insertPeakSeason">
		INSERT
		  INTO PEAKSEASON
		  (
		  	   ROOM_NO
		  	 , PEAK_START
		  	 , PEAK_END
		  	 , PEAK_PRICE
		  )
		  VALUES
		  (
		  	   SEQ_ROOMNO.CURRVAL   <!-- 현재 전달된 서비스 메소드에서 ROOMS 인서트할때의 ROOMNO값 불러오기 (같은 conn 사용하니까)-->
		  	 , ?
		  	 , ?
		  	 , ?
		  )
	</entry>
	
	<entry key="selectRooms">
		SELECT
			   ROOM_NO
		     , ROOM_NAME
		     , ENROLL_STATUS
		     , CREATE_DATE
		     , FILE_PATH
		     , CHANGE_NAME
		  FROM ROOMS R
		  JOIN FILES F USING(ROOM_NO)
		 WHERE R.STATUS = 'Y'
		   AND F.STATUS = 'Y'
		   AND FILE_LEVEL = 0
		   AND USER_ID = ?
		 ORDER BY CREATE_DATE DESC
	</entry>
	
	<entry key="selectRoomBasic">
		SELECT
			   ROOM_NO	
		     , ROOM_NAME
		     , ROOM_TITLE
		     , ROOM_DES
		     , ROOM
		     , BED
		     , BATH
		     , ROOM_TYPE
		     , BUILDING_TYPE
		     , ROOM_SIZE
		     , START_TIME
		     , END_TIME
		     , ROOM_FAC
		  FROM ROOMS
		 WHERE ROOM_NO = ?
	</entry>

	<entry key="updateRoomBasic">
		UPDATE
		 	   ROOMS
		   SET ROOM_NAME = ?
		     , ROOM_TITLE = ?
		     , ROOM_DES = ?
		     , ROOM = ?
		     , BED = ?
		     , BATH = ?
		     , ROOM_TYPE = ?
		     , BUILDING_TYPE = ?
		     , ROOM_SIZE = ?
		     , START_TIME = ?
		     , END_TIME = ?
		     , ROOM_FAC = ?
		     , MODIFY_DATE = SYSDATE
	     WHERE ROOM_NO = ?         
	</entry>
	
	<entry key="selectRoomPrice">
		SELECT
			   ROOM_NO	
		     , PRICE
		     , EXTRA_COST
		     , MIN_PEOPLE
		     , MAX_PEOPLE
		     , MIN_STAY
		     , MAX_STAY 
		  FROM ROOMS
		 WHERE ROOM_NO = ?
	</entry>
	
	<entry key="selectRoomPeak">
		SELECT
		       ROOM_NO
		     , PEAK_START
		     , PEAK_END
		     , PEAK_PRICE 
		  FROM PEAKSEASON
		 WHERE ROOM_NO = ?	
	</entry>
	
	<entry key="updateRoomPrice">
		UPDATE
		 	   ROOMS
		   SET MIN_STAY = ?
		     , MAX_STAY = ?
		     , MIN_PEOPLE = ?
		     , MAX_PEOPLE = ?
		     , PRICE = ?
		     , EXTRA_COST = ?
		     , MODIFY_DATE = SYSDATE
	     WHERE ROOM_NO = ?       	
	</entry>
	
	<entry key="updatePeakSeason">
		UPDATE
			   PEAKSEASON
		   SET PEAK_START = ?
		     , PEAK_END = ?
		     , PEAK_PRICE = ?
		 WHERE ROOM_NO = ?    	
	</entry>
	
	<entry key="selectRoomPhoto">
		SELECT
			   ROOM_NO
		     , LOCATION
		     , ADDRESS
		     , ROOM_LINK
		  FROM ROOMS
		 WHERE ROOM_NO = ?	
	</entry>

	<entry key="selectFiles">
		SELECT
			   ROOM_NO
		     , CHANGE_NAME
		     , FILE_PATH
		     , FILE_LEVEL
		  FROM FILES
		 WHERE ROOM_NO = ?	
	</entry>
	
	<entry key="updateRoomPhoto">
		UPDATE
		       ROOMS
		   SET LOCATION = ?
		     , ADDRESS = ?
		     , ROOM_LINK = ?
		     , MODIFY_DATE = SYSDATE
		 WHERE ROOM_NO = ?	
	</entry>
	
	<entry key="updateFile">
		UPDATE
			   FILES
		   SET CHANGE_NAME = ?
		 WHERE CHANGE_NAME = ?	     
	</entry>
	
	<entry key="insertAddedFile">
		INSERT
		  INTO FILES
		(    
			   FILE_NO
			 , CHANGE_NAME
			 , ROOM_NO
			 , FILE_PATH
			 , FILE_LEVEL
			 , STATUS   
		)
		VALUES
		(
			   SEQ_FILENO.NEXTVAL
			 , ?
			 , ?
			 , ?
			 , ?
			 , DEFAULT
		)
	</entry>
	
	<entry key="deleteRoom">
		UPDATE
			   ROOMS
		   SET STATUS = 'N'
		 WHERE ROOM_NO = ?
	</entry>
	
	<entry key="selectRoomReview">
		SELECT
		       R.ROOM_NO
		     , ROOM_NAME
		     , REVIEW
		     , REVIEW_DATE
		     , RV.USER_ID
		  FROM ROOMS R
		  JOIN ROOMS_REVIEW RV ON(R.ROOM_NO = RV.ROOM_NO)
		 WHERE R.USER_ID = ?
		   AND R.STATUS = 'Y'
	</entry>
	
	<entry key="getListCount">
		SELECT
		       COUNT(*)
		  FROM ROOMS
		 WHERE STATUS = 'Y'
		   AND USER_ID = ?	
	</entry>
	
	<entry key="selectList">
		SELECT *
		  FROM (SELECT ROWNUM RNUM, A.*
				  FROM (SELECT
						       ROOM_NO
						     , ROOM_NAME
						     , ENROLL_STATUS
						     , CREATE_DATE
						     , FILE_PATH
						     , CHANGE_NAME
						  FROM ROOMS R
						  JOIN FILES F USING(ROOM_NO)
						 WHERE R.STATUS = 'Y'
						   AND F.STATUS = 'Y'
						   AND FILE_LEVEL = 0
						   AND USER_ID = ?
						 ORDER BY ROOM_NO DESC) A)      
		 WHERE RNUM BETWEEN ? AND ?	
	</entry>
	
	<entry key="deletePeak">
		DELETE
		  FROM PEAKSEASON
		 WHERE ROOM_NO = ?
	</entry>
	
	
	<entry key="insertAddPeak">
		INSERT
		  INTO PEAKSEASON
		  (
		  	   ROOM_NO
		  	 , PEAK_START
		  	 , PEAK_END
		  	 , PEAK_PRICE
		  )
		  VALUES
		  (
		  	   ?   <!-- 기존에 있던 방에 추가하는 거라서 -->
		  	 , ?
		  	 , ?
		  	 , ?
		  )
	</entry>
	
	<entry key="getReviewCount">
		SELECT
		       COUNT(*)
		  FROM ROOMS R
		  JOIN ROOMS_REVIEW RV ON(R.ROOM_NO = RV.ROOM_NO)
		 WHERE R.USER_ID = ?
		   AND R.STATUS = 'Y'
		   AND REVIEW_STATUS = 'Y'	
	</entry>
	
	<entry key="selectReviewList">
		SELECT *
		  FROM (SELECT ROWNUM RNUM, A.*
				  FROM (SELECT
						       R.ROOM_NO
						     , REVIEW_NO
						     , ROOM_NAME
						     , REVIEW
						     , REVIEW_DATE
						     , RV.USER_ID
						     , STAR
						  FROM ROOMS R
						  JOIN ROOMS_REVIEW RV ON(R.ROOM_NO = RV.ROOM_NO)
						 WHERE R.USER_ID = ?
						   AND R.STATUS = 'Y'
						   AND REVIEW_STATUS = 'Y'
						 ORDER BY REVIEW_NO DESC) A)
		 WHERE RNUM BETWEEN ? AND ?	
	</entry>
	
	<entry key="getRnameListCount">
		SELECT
		       COUNT(*)
		  FROM ROOMS
		 WHERE USER_ID = ?
		   AND STATUS = 'Y'
		   AND ROOM_NAME LIKE '%' || ? || '%'
	</entry>
	
	<entry key="getRstatusListCount">
		SELECT
		       COUNT(*)
		  FROM ROOMS
		 WHERE USER_ID = ?
		   AND STATUS = 'Y'
		   AND ENROLL_STATUS LIKE '%' || ? || '%'
	</entry>	
	
	<entry key="selectRnameList">
		SELECT *
		  FROM (SELECT ROWNUM RNUM, A.*
				  FROM (SELECT
						       ROOM_NO
						     , ROOM_NAME
						     , ENROLL_STATUS
						     , CREATE_DATE
						     , FILE_PATH
						     , CHANGE_NAME
						  FROM ROOMS R
						  JOIN FILES F USING(ROOM_NO)
						 WHERE R.STATUS = 'Y'
						   AND F.STATUS = 'Y'
						   AND FILE_LEVEL = 0
						   AND USER_ID = ?
						   AND ROOM_NAME LIKE '%' || ? || '%'
						 ORDER BY ROOM_NO DESC) A)      
		 WHERE RNUM BETWEEN ? AND ?	
	</entry>	

	<entry key="selectRstatusList">
		SELECT *
		  FROM (SELECT ROWNUM RNUM, A.*
				  FROM (SELECT
						       ROOM_NO
						     , ROOM_NAME
						     , ENROLL_STATUS
						     , CREATE_DATE
						     , FILE_PATH
						     , CHANGE_NAME
						  FROM ROOMS R
						  JOIN FILES F USING(ROOM_NO)
						 WHERE R.STATUS = 'Y'
						   AND F.STATUS = 'Y'
						   AND FILE_LEVEL = 0
						   AND USER_ID = ?
						   AND ENROLL_STATUS LIKE '%' || ? || '%'
						 ORDER BY ROOM_NO DESC) A)      
		 WHERE RNUM BETWEEN ? AND ?	
	</entry>		
	
	<entry key="selectReserveList">
		SELECT
		       RE.START_DATE
		     , RE.END_DATE
		     , PERSON_RESERVE
		     , RESERVE_NUM
		     , ROOM_NAME
		  FROM RESERVATION RE
		  JOIN ROOMS R USING(ROOM_NO)
		 WHERE USER_ID = ?
		   AND RESERVE_STATE = '예약완료'
	</entry>
	
	<entry key="selectOneReview">
		SELECT
		       REVIEW
		     , REVIEW_DATE
		     , RV.USER_ID
		     , STAR
		     , ROOM_NAME
		  FROM ROOMS_REVIEW RV
		  JOIN ROOMS USING(ROOM_NO)
		 WHERE REVIEW_NO = ?
		   AND STATUS = 'Y'		
	</entry>
	
	
</properties>




